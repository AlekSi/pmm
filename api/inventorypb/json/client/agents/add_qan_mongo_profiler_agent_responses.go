// Code generated by go-swagger; DO NOT EDIT.

package agents

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"
)

// AddQANMongoProfilerAgentReader is a Reader for the AddQANMongoProfilerAgent structure.
type AddQANMongoProfilerAgentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddQANMongoProfilerAgentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewAddQANMongoProfilerAgentOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewAddQANMongoProfilerAgentDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewAddQANMongoProfilerAgentOK creates a AddQANMongoProfilerAgentOK with default headers values
func NewAddQANMongoProfilerAgentOK() *AddQANMongoProfilerAgentOK {
	return &AddQANMongoProfilerAgentOK{}
}

/*AddQANMongoProfilerAgentOK handles this case with default header values.

A successful response.
*/
type AddQANMongoProfilerAgentOK struct {
	Payload *AddQANMongoProfilerAgentOKBody
}

func (o *AddQANMongoProfilerAgentOK) Error() string {
	return fmt.Sprintf("[POST /v1/inventory/Agents/AddQANMongoProfilerAgent][%d] addQanMongoProfilerAgentOk  %+v", 200, o.Payload)
}

func (o *AddQANMongoProfilerAgentOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(AddQANMongoProfilerAgentOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddQANMongoProfilerAgentDefault creates a AddQANMongoProfilerAgentDefault with default headers values
func NewAddQANMongoProfilerAgentDefault(code int) *AddQANMongoProfilerAgentDefault {
	return &AddQANMongoProfilerAgentDefault{
		_statusCode: code,
	}
}

/*AddQANMongoProfilerAgentDefault handles this case with default header values.

An error response.
*/
type AddQANMongoProfilerAgentDefault struct {
	_statusCode int

	Payload *AddQANMongoProfilerAgentDefaultBody
}

// Code gets the status code for the add QAN mongo profiler agent default response
func (o *AddQANMongoProfilerAgentDefault) Code() int {
	return o._statusCode
}

func (o *AddQANMongoProfilerAgentDefault) Error() string {
	return fmt.Sprintf("[POST /v1/inventory/Agents/AddQANMongoProfilerAgent][%d] AddQANMongoProfilerAgent default  %+v", o._statusCode, o.Payload)
}

func (o *AddQANMongoProfilerAgentDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(AddQANMongoProfilerAgentDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*AddQANMongoProfilerAgentBody add QAN mongo profiler agent body
swagger:model AddQANMongoProfilerAgentBody
*/
type AddQANMongoProfilerAgentBody struct {

	// Custom user-assigned labels.
	CustomLabels map[string]string `json:"custom_labels,omitempty"`

	// MongoDB password for getting profile data.
	Password string `json:"password,omitempty"`

	// The pmm-agent identifier which runs this instance.
	PMMAgentID string `json:"pmm_agent_id,omitempty"`

	// Service identifier.
	ServiceID string `json:"service_id,omitempty"`

	// MongoDB username for getting profile data.
	Username string `json:"username,omitempty"`
}

// Validate validates this add QAN mongo profiler agent body
func (o *AddQANMongoProfilerAgentBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AddQANMongoProfilerAgentBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AddQANMongoProfilerAgentBody) UnmarshalBinary(b []byte) error {
	var res AddQANMongoProfilerAgentBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*AddQANMongoProfilerAgentDefaultBody ErrorResponse is a message returned on HTTP error.
swagger:model AddQANMongoProfilerAgentDefaultBody
*/
type AddQANMongoProfilerAgentDefaultBody struct {

	// code
	Code int32 `json:"code,omitempty"`

	// error
	Error string `json:"error,omitempty"`

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this add QAN mongo profiler agent default body
func (o *AddQANMongoProfilerAgentDefaultBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AddQANMongoProfilerAgentDefaultBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AddQANMongoProfilerAgentDefaultBody) UnmarshalBinary(b []byte) error {
	var res AddQANMongoProfilerAgentDefaultBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*AddQANMongoProfilerAgentOKBody add QAN mongo profiler agent OK body
swagger:model AddQANMongoProfilerAgentOKBody
*/
type AddQANMongoProfilerAgentOKBody struct {

	// qan mongo profiler agent
	QANMongoProfilerAgent *AddQANMongoProfilerAgentOKBodyQANMongoProfilerAgent `json:"qan_mongo_profiler_agent,omitempty"`
}

// Validate validates this add QAN mongo profiler agent OK body
func (o *AddQANMongoProfilerAgentOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateQANMongoProfilerAgent(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *AddQANMongoProfilerAgentOKBody) validateQANMongoProfilerAgent(formats strfmt.Registry) error {

	if swag.IsZero(o.QANMongoProfilerAgent) { // not required
		return nil
	}

	if o.QANMongoProfilerAgent != nil {
		if err := o.QANMongoProfilerAgent.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("addQanMongoProfilerAgentOk" + "." + "qan_mongo_profiler_agent")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *AddQANMongoProfilerAgentOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AddQANMongoProfilerAgentOKBody) UnmarshalBinary(b []byte) error {
	var res AddQANMongoProfilerAgentOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*AddQANMongoProfilerAgentOKBodyQANMongoProfilerAgent QANMongoProfilerAgent runs within pmm-agent and sends MongoDB Query Analytics data to the PMM Server.
swagger:model AddQANMongoProfilerAgentOKBodyQANMongoProfilerAgent
*/
type AddQANMongoProfilerAgentOKBodyQANMongoProfilerAgent struct {

	// Unique randomly generated instance identifier.
	AgentID string `json:"agent_id,omitempty"`

	// Custom user-assigned labels.
	CustomLabels map[string]string `json:"custom_labels,omitempty"`

	// Desired Agent status: enabled (false) or disabled (true).
	Disabled bool `json:"disabled,omitempty"`

	// MySQL password for getting performance data.
	Password string `json:"password,omitempty"`

	// The pmm-agent identifier which runs this instance.
	PMMAgentID string `json:"pmm_agent_id,omitempty"`

	// Service identifier.
	ServiceID string `json:"service_id,omitempty"`

	// AgentStatus represents actual Agent status.
	// Enum: [AGENT_STATUS_INVALID STARTING RUNNING WAITING STOPPING DONE]
	Status *string `json:"status,omitempty"`

	// MySQL username for getting performance data.
	Username string `json:"username,omitempty"`
}

// Validate validates this add QAN mongo profiler agent OK body QAN mongo profiler agent
func (o *AddQANMongoProfilerAgentOKBodyQANMongoProfilerAgent) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateStatus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var addQanMongoProfilerAgentOkBodyQanMongoProfilerAgentTypeStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["AGENT_STATUS_INVALID","STARTING","RUNNING","WAITING","STOPPING","DONE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		addQanMongoProfilerAgentOkBodyQanMongoProfilerAgentTypeStatusPropEnum = append(addQanMongoProfilerAgentOkBodyQanMongoProfilerAgentTypeStatusPropEnum, v)
	}
}

const (

	// AddQANMongoProfilerAgentOKBodyQANMongoProfilerAgentStatusAGENTSTATUSINVALID captures enum value "AGENT_STATUS_INVALID"
	AddQANMongoProfilerAgentOKBodyQANMongoProfilerAgentStatusAGENTSTATUSINVALID string = "AGENT_STATUS_INVALID"

	// AddQANMongoProfilerAgentOKBodyQANMongoProfilerAgentStatusSTARTING captures enum value "STARTING"
	AddQANMongoProfilerAgentOKBodyQANMongoProfilerAgentStatusSTARTING string = "STARTING"

	// AddQANMongoProfilerAgentOKBodyQANMongoProfilerAgentStatusRUNNING captures enum value "RUNNING"
	AddQANMongoProfilerAgentOKBodyQANMongoProfilerAgentStatusRUNNING string = "RUNNING"

	// AddQANMongoProfilerAgentOKBodyQANMongoProfilerAgentStatusWAITING captures enum value "WAITING"
	AddQANMongoProfilerAgentOKBodyQANMongoProfilerAgentStatusWAITING string = "WAITING"

	// AddQANMongoProfilerAgentOKBodyQANMongoProfilerAgentStatusSTOPPING captures enum value "STOPPING"
	AddQANMongoProfilerAgentOKBodyQANMongoProfilerAgentStatusSTOPPING string = "STOPPING"

	// AddQANMongoProfilerAgentOKBodyQANMongoProfilerAgentStatusDONE captures enum value "DONE"
	AddQANMongoProfilerAgentOKBodyQANMongoProfilerAgentStatusDONE string = "DONE"
)

// prop value enum
func (o *AddQANMongoProfilerAgentOKBodyQANMongoProfilerAgent) validateStatusEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, addQanMongoProfilerAgentOkBodyQanMongoProfilerAgentTypeStatusPropEnum); err != nil {
		return err
	}
	return nil
}

func (o *AddQANMongoProfilerAgentOKBodyQANMongoProfilerAgent) validateStatus(formats strfmt.Registry) error {

	if swag.IsZero(o.Status) { // not required
		return nil
	}

	// value enum
	if err := o.validateStatusEnum("addQanMongoProfilerAgentOk"+"."+"qan_mongo_profiler_agent"+"."+"status", "body", *o.Status); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *AddQANMongoProfilerAgentOKBodyQANMongoProfilerAgent) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AddQANMongoProfilerAgentOKBodyQANMongoProfilerAgent) UnmarshalBinary(b []byte) error {
	var res AddQANMongoProfilerAgentOKBodyQANMongoProfilerAgent
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

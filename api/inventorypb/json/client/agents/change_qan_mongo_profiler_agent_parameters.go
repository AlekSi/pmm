// Code generated by go-swagger; DO NOT EDIT.

package agents

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewChangeQANMongoProfilerAgentParams creates a new ChangeQANMongoProfilerAgentParams object
// with the default values initialized.
func NewChangeQANMongoProfilerAgentParams() *ChangeQANMongoProfilerAgentParams {
	var ()
	return &ChangeQANMongoProfilerAgentParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewChangeQANMongoProfilerAgentParamsWithTimeout creates a new ChangeQANMongoProfilerAgentParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewChangeQANMongoProfilerAgentParamsWithTimeout(timeout time.Duration) *ChangeQANMongoProfilerAgentParams {
	var ()
	return &ChangeQANMongoProfilerAgentParams{

		timeout: timeout,
	}
}

// NewChangeQANMongoProfilerAgentParamsWithContext creates a new ChangeQANMongoProfilerAgentParams object
// with the default values initialized, and the ability to set a context for a request
func NewChangeQANMongoProfilerAgentParamsWithContext(ctx context.Context) *ChangeQANMongoProfilerAgentParams {
	var ()
	return &ChangeQANMongoProfilerAgentParams{

		Context: ctx,
	}
}

// NewChangeQANMongoProfilerAgentParamsWithHTTPClient creates a new ChangeQANMongoProfilerAgentParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewChangeQANMongoProfilerAgentParamsWithHTTPClient(client *http.Client) *ChangeQANMongoProfilerAgentParams {
	var ()
	return &ChangeQANMongoProfilerAgentParams{
		HTTPClient: client,
	}
}

/*ChangeQANMongoProfilerAgentParams contains all the parameters to send to the API endpoint
for the change QAN mongo profiler agent operation typically these are written to a http.Request
*/
type ChangeQANMongoProfilerAgentParams struct {

	/*Body*/
	Body ChangeQANMongoProfilerAgentBody

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the change QAN mongo profiler agent params
func (o *ChangeQANMongoProfilerAgentParams) WithTimeout(timeout time.Duration) *ChangeQANMongoProfilerAgentParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the change QAN mongo profiler agent params
func (o *ChangeQANMongoProfilerAgentParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the change QAN mongo profiler agent params
func (o *ChangeQANMongoProfilerAgentParams) WithContext(ctx context.Context) *ChangeQANMongoProfilerAgentParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the change QAN mongo profiler agent params
func (o *ChangeQANMongoProfilerAgentParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the change QAN mongo profiler agent params
func (o *ChangeQANMongoProfilerAgentParams) WithHTTPClient(client *http.Client) *ChangeQANMongoProfilerAgentParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the change QAN mongo profiler agent params
func (o *ChangeQANMongoProfilerAgentParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the change QAN mongo profiler agent params
func (o *ChangeQANMongoProfilerAgentParams) WithBody(body ChangeQANMongoProfilerAgentBody) *ChangeQANMongoProfilerAgentParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the change QAN mongo profiler agent params
func (o *ChangeQANMongoProfilerAgentParams) SetBody(body ChangeQANMongoProfilerAgentBody) {
	o.Body = body
}

// WriteToRequest writes these params to a swagger request
func (o *ChangeQANMongoProfilerAgentParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if err := r.SetBodyParam(o.Body); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
